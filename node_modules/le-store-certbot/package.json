{
  "_args": [
    [
      {
        "raw": "le-store-certbot@^2.0.3",
        "scope": null,
        "escapedName": "le-store-certbot",
        "name": "le-store-certbot",
        "rawSpec": "^2.0.3",
        "spec": ">=2.0.3 <3.0.0",
        "type": "range"
      },
      "/home/connextcms/test/node_modules/letsencrypt-express"
    ]
  ],
  "_from": "le-store-certbot@>=2.0.3 <3.0.0",
  "_id": "le-store-certbot@2.0.5",
  "_inCache": true,
  "_location": "/le-store-certbot",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/le-store-certbot-2.0.5.tgz_1492187778495_0.06499784206971526"
  },
  "_npmUser": {
    "name": "jimh",
    "email": "jim.hager@daplie.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "le-store-certbot@^2.0.3",
    "scope": null,
    "escapedName": "le-store-certbot",
    "name": "le-store-certbot",
    "rawSpec": "^2.0.3",
    "spec": ">=2.0.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/letsencrypt",
    "/letsencrypt-express"
  ],
  "_resolved": "https://registry.npmjs.org/le-store-certbot/-/le-store-certbot-2.0.5.tgz",
  "_shasum": "b53fcfc177bdf00ea88812d0de673a0de0fe3491",
  "_shrinkwrap": null,
  "_spec": "le-store-certbot@^2.0.3",
  "_where": "/home/connextcms/test/node_modules/letsencrypt-express",
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "https://coolaj86.com/"
  },
  "bugs": {
    "url": "https://git.daplie.com/Daplie/le-store-certbot/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.1",
    "mkdirp": "^0.5.1",
    "pyconf": "^1.1.2",
    "safe-replace": "^1.0.2"
  },
  "description": "The \"certbot\" storage strategy for node-letsencrypt",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b53fcfc177bdf00ea88812d0de673a0de0fe3491",
    "tarball": "https://registry.npmjs.org/le-store-certbot/-/le-store-certbot-2.0.5.tgz"
  },
  "gitHead": "0df0a16d655e30429d5d08522bae70da5f2d58f8",
  "homepage": "https://git.daplie.com/Daplie/le-store-certbot#readme",
  "keywords": [
    "le-store",
    "le-store-",
    "certbot",
    "letsencrypt",
    "node"
  ],
  "license": "(MIT OR Apache-2.0)",
  "main": "index.js",
  "maintainers": [
    {
      "name": "coolaj86",
      "email": "coolaj86@gmail.com"
    },
    {
      "name": "creationix",
      "email": "tim@creationix.com"
    },
    {
      "name": "daplieinc",
      "email": "npm@daplie.com"
    },
    {
      "name": "drewwarrentiy",
      "email": "drewwarrentiy@gmail.com"
    },
    {
      "name": "jimh",
      "email": "jim.hager@daplie.com"
    },
    {
      "name": "tigerbot",
      "email": "slgibelyou@gmail.com"
    }
  ],
  "name": "le-store-certbot",
  "optionalDependencies": {},
  "readme": "<!-- BANNER_TPL_BEGIN -->\n\nAbout Daplie: We're taking back the Internet!\n--------------\n\nDown with Google, Apple, and Facebook!\n\nWe're re-decentralizing the web and making it read-write again - one home cloud system at a time.\n\nTired of serving the Empire? Come join the Rebel Alliance:\n\n<a href=\"mailto:jobs@daplie.com\">jobs@daplie.com</a> | [Invest in Daplie on Wefunder](https://daplie.com/invest/) | [Pre-order Cloud](https://daplie.com/preorder/), The World's First Home Server for Everyone\n\n<!-- BANNER_TPL_END -->\n\nle-store-certbot\n================\n\nThe \"certbot\" storage strategy for node-letsencrypt.\n\nThis le storage strategy aims to maintain compatibility with the\nconfiguration files and file structure of the official certbot client.\n\nNote: You cannot use this strategy on ephemeral instances (heroku, aws elastic).\n\nUsage\n-----\n\n```bash\nnpm install --save le-store-certbot@2.x\n```\n\n```bash\nvar leStore = require('le-store-certbot').create({\n  configDir: require('homedir')() + '/letsencrypt/etc'          // or /etc/letsencrypt or wherever\n, privkeyPath: ':configDir/live/:hostname/privkey.pem'          //\n, fullchainPath: ':configDir/live/:hostname/fullchain.pem'      // Note: both that :configDir and :hostname\n, certPath: ':configDir/live/:hostname/cert.pem'                //       will be templated as expected by\n, chainPath: ':configDir/live/:hostname/chain.pem'              //       node-letsencrypt\n\n, workDir: require('homedir')() + '/letsencrypt/var/lib'\n, logsDir: require('homedir')() + '/letsencrypt/var/log'\n\n, webrootPath: '~/letsencrypt/srv/www/:hostname/.well-known/acme-challenge'\n\n, debug: false\n});\n\nvar LE = require('letsencrypt');\n\nLE.create({\n  server: LE.stagingServerUrl                               // Change to LE.productionServerUrl in production\n, store: leStore\n});\n```\n\nExample File Structure\n----------------------\n\n```\n~/letsencrypt/\n└── etc\n    ├── accounts\n    │   └── acme-staging.api.letsencrypt.org\n    │       └── directory\n    │           └── cd96ac4889ddfa47bfc66300ab223342\n    │               ├── meta.json\n    │               ├── private_key.json\n    │               └── regr.json\n    ├── archive\n    │   └── example.daplie.me\n    │       ├── cert0.pem\n    │       ├── chain0.pem\n    │       ├── fullchain0.pem\n    │       └── privkey0.pem\n    ├── live\n    │   └── example.daplie.me\n    │       ├── cert.pem\n    │       ├── chain.pem\n    │       ├── fullchain.pem\n    │       ├── privkey.pem\n    │       └── privkey.pem.bak\n    └── renewal\n        ├── example.daplie.me.conf\n        └── example.daplie.me.conf.bak\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://git.daplie.com/Daplie/le-store-certbot.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.0.5"
}
